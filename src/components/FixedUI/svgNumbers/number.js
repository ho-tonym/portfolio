import React, { useEffect, useState } from 'react';
import styles from '../FixedUI.module.css'
// import Svg1 from './svg1' //122.28
// import Svg2 from './svg2' //166.91
// import Svg3 from './svg3' //176.78
import Svg from './svgNumber'
import { useStateValue } from "../../../MyProvider"
import {numSvgAnimTime} from "../../utils"
const Number = ({ color }) => {
  const svgData = {
    0: {
      d: `M4.392,11.162h39.26l-4.875-6.63h7.021l4.875,6.63
      v6.63H4.392V11.162z`,
      stroke: 122.28,
    },
    1: {
      d: `M4.392,3.296h6.24l22.554,11.96
       c1.127,0.606,2.113,0.953,2.958,1.04c0.845,0.086,1.896,0.13,3.152,0.13c0.563,0,1.159-0.011,1.788-0.032
       c0.627-0.022,1.18-0.142,1.657-0.357c0.476-0.218,0.878-0.543,1.202-0.976c0.325-0.434,0.488-1.062,0.488-1.885
       c0-0.997-0.283-1.787-0.846-2.372c-0.563-0.585-1.387-0.878-2.47-0.878h-3.771v-6.63h3.641c1.387,0,2.686,0.26,3.9,0.78
       c1.212,0.52,2.274,1.234,3.185,2.145c0.909,0.866,1.635,1.906,2.177,3.12c0.542,1.213,0.812,2.513,0.812,3.9
       c0,1.732-0.314,3.217-0.941,4.452c-0.629,1.235-1.485,2.264-2.568,3.088c-1.084,0.779-2.318,1.354-3.705,1.723
       c-1.387,0.367-2.859,0.552-4.42,0.552c-1.127,0-2.069-0.022-2.827-0.064c-0.759-0.044-1.485-0.13-2.178-0.261
       c-0.693-0.13-1.388-0.347-2.079-0.649c-0.694-0.304-1.539-0.715-2.535-1.235l-18.786-9.75v11.96H4.392V3.296z`,
      stroke: 166.91,
    },
    2: {
      d: `M31.172,11.162c0,1.992,0.237,3.368,0.715,4.127
        c0.477,0.758,1.581,1.138,3.314,1.138h5.98c0.953,0,1.732-0.292,2.34-0.877c0.606-0.585,0.91-1.377,0.91-2.373
        c0-1.17-0.369-2.005-1.105-2.502c-0.736-0.499-1.452-0.748-2.145-0.748h-3.77v-6.63h3.834c1.344,0,2.622,0.26,3.836,0.78
        c1.213,0.52,2.252,1.234,3.119,2.145s1.561,1.972,2.08,3.186c0.521,1.212,0.78,2.513,0.78,3.899c0,1.82-0.357,3.325-1.072,4.518
        c-0.716,1.191-1.441,2.091-2.178,2.697c-0.521,0.433-1.04,0.812-1.56,1.138c-0.521,0.325-1.148,0.596-1.885,0.812
        c-1.431,0.391-3.555,0.585-6.371,0.585c-1.604,0-2.903-0.032-3.899-0.098c-0.997-0.064-1.82-0.228-2.47-0.487
        c-0.693-0.304-1.279-0.726-1.756-1.268s-0.997-1.289-1.56-2.242c-0.65,1.04-1.257,1.83-1.82,2.372
        c-0.564,0.542-1.214,0.943-1.95,1.203c-0.78,0.26-1.701,0.411-2.762,0.455c-1.062,0.042-2.417,0.064-4.062,0.064
        c-1.518,0-2.774-0.032-3.77-0.098c-0.998-0.064-1.82-0.162-2.47-0.292c-0.694-0.13-1.279-0.304-1.755-0.521
        c-0.478-0.217-0.975-0.498-1.495-0.845c-1.214-0.823-2.221-1.875-3.022-3.152c-0.803-1.278-1.202-2.957-1.202-5.037
        c0-1.04,0.173-2.146,0.52-3.315s0.91-2.232,1.69-3.185c0.78-0.954,1.798-1.745,3.055-2.373c1.256-0.629,2.795-0.942,4.615-0.942
        h3.77v6.63h-3.445c-1.04,0-1.896,0.293-2.567,0.878c-0.672,0.585-1.007,1.375-1.007,2.372c0,0.996,0.335,1.788,1.007,2.373
        c0.671,0.585,1.57,0.877,2.697,0.877h6.63c1.82,0,3.011-0.348,3.575-1.04c0.346-0.39,0.563-0.921,0.65-1.593
        c0.086-0.672,0.13-1.55,0.13-2.632H31.172z`,
      stroke: 176.78,
    },
  }
  const { currentProj, setProj } = useStateValue();
  const [show, toggleNumber] = useState(false)
  const [svgValues, setSvgValues] = useState({
    stroke: svgData[currentProj].stroke,
    d: svgData[currentProj].d,
  })
  // const [showNumber, setShowNumber] = useState(false)

  useEffect(() => {
    //I NEED TO SET OFFSET IMMEDIATELY
    // ATTATCHED TO CURRENTPROJ THAT CHANGES EVERY 1000
    // go to 0
    toggleNumber(false)
    // change path and offset
    setTimeout(() => {
      setSvgValues({
        stroke: svgData[currentProj].stroke,
        d: svgData[currentProj].d,
      })
      toggleNumber(true)
    }, numSvgAnimTime)
    // change the number
    // setTimeout(() => toggleNumber(true), 800)
  }, [currentProj])

  return(
    <>
      <svg className={styles.numberSVG} width="55.2" height="51.148" viewBox="0 0 55.2 51.148">
        <text transform="matrix(-4.371139e-08 1 -1 -4.371139e-08 4.3921 1.0864)" fill="none" stroke={color} strokeWidth="2" fontSize="65" fontFamily="DINCondensed-Bold, DIN Condensed" fontWeight="700">
          <tspan x="0" y="0">00</tspan>
        </text>
      </svg>
      <Svg
        color={color}
        show={show}
        stroke={svgValues.stroke}
        d={svgValues.d}
      />
    </>
  )
}

export default Number
